{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Link from 'next/link';\nimport './navbar.css';\nimport McmLogo from '../mcmLogo';\nimport navbar_items from './navbar_content';\n\nvar DropDownWide = function DropDownWide(props) {\n  var h = props.expanded ? 500 : 0;\n  var dropDownHeightStyle = {\n    maxHeight: \"\".concat(h, \"px\")\n  };\n  return React.createElement(\"div\", {\n    className: \"dropdown-item\",\n    onMouseEnter: props.handleMouseEnter,\n    onMouseLeave: props.handleMouseLeave,\n    style: {\n      width: '10%'\n    }\n  }, React.createElement(\"div\", null, props.headerTo !== undefined ? React.createElement(Link, {\n    href: props.headerTo\n  }, React.createElement(\"div\", {\n    className: props.expanded ? 'dropdown-header-active' : 'dropdown-header-inactive'\n  }, props.header)) : React.createElement(\"div\", {\n    className: props.expanded ? 'dropdown-header-active' : 'dropdown-header-inactive'\n  }, props.header)), React.createElement(\"div\", {\n    className: \"dropdown-subheaders\",\n    style: dropDownHeightStyle\n  }, props.dropDownChildren.map(function (_ref) {\n    var subheader = _ref.subheader,\n        to = _ref.to,\n        href = _ref.href;\n    return href === undefined ? React.createElement(Link, {\n      href: to,\n      key: \"\".concat(subheader)\n    }, React.createElement(\"div\", {\n      className: \"dropdown-subheader\"\n    }, subheader)) : React.createElement(\"a\", {\n      href: href,\n      key: \"\".concat(subheader),\n      style: {\n        textDecoration: 'none'\n      },\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, React.createElement(\"div\", {\n      className: \"dropdown-subheader\"\n    }, subheader));\n  })));\n};\n\nvar DropDownNarrow = function DropDownNarrow(props) {\n  var h = props.expanded ? 500 : 0;\n  var dropDownHeightStyle = {\n    maxHeight: \"\".concat(h, \"px\")\n  };\n  return React.createElement(\"div\", {\n    className: \"dropdown-item\"\n  }, React.createElement(\"div\", null, props.headerTo !== undefined ? React.createElement(Link, {\n    href: props.headerTo\n  }, React.createElement(\"div\", {\n    className: \"dropdown-header\",\n    onClick: props.handleClick\n  }, props.header)) : React.createElement(\"div\", {\n    className: \"dropdown-header\",\n    onClick: props.handleClick\n  }, props.header, '      ', React.createElement(\"img\", {\n    className: \"arrow\",\n    style: props.expanded ? {\n      transform: 'rotate(90deg)'\n    } : {},\n    src: \"https://icon.now.sh/chevron/2B2F3A/10\",\n    alt: \">\"\n  }))), React.createElement(\"div\", {\n    className: \"dropdown-subheaders\",\n    style: dropDownHeightStyle\n  }, props.dropDownChildren.map(function (_ref2) {\n    var subheader = _ref2.subheader,\n        to = _ref2.to,\n        href = _ref2.href;\n    return href === undefined ? React.createElement(Link, {\n      href: to,\n      key: \"\".concat(subheader)\n    }, React.createElement(\"div\", {\n      className: \"dropdown-subheader\"\n    }, subheader)) : React.createElement(\"a\", {\n      href: href,\n      key: \"\".concat(subheader),\n      style: {\n        textDecoration: 'none'\n      },\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, React.createElement(\"div\", {\n      className: \"dropdown-subheader\"\n    }, subheader));\n  })));\n};\n\nvar NavBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavBar, _React$Component);\n\n  function NavBar(props) {\n    var _this;\n\n    _classCallCheck(this, NavBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NavBar).call(this, props));\n    var headerStates = [];\n\n    for (var i = 0; i < props.dropDownItems.length; i++) {\n      headerStates.push(false);\n    }\n\n    _this.state = {\n      closed: true,\n      fixedNavbar: false,\n      headerStates: headerStates\n    };\n    _this.showSubheader = _this.showSubheader.bind(_assertThisInitialized(_this));\n    _this.hideSubheader = _this.hideSubheader.bind(_assertThisInitialized(_this));\n    _this.toggleSubheader = _this.toggleSubheader.bind(_assertThisInitialized(_this));\n    _this.toggleNavbar = _this.toggleNavbar.bind(_assertThisInitialized(_this));\n    _this.scrollHandler = _this.scrollHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: \"showSubheader\",\n    value: function showSubheader(indx) {\n      var current = this.state.headerStates;\n      current[indx] = true;\n      this.setState({\n        headerStates: current\n      });\n    }\n  }, {\n    key: \"hideSubheader\",\n    value: function hideSubheader(indx) {\n      var current = this.state.headerStates;\n      current[indx] = false;\n      this.setState({\n        headerStates: current\n      });\n    }\n  }, {\n    key: \"toggleSubheader\",\n    value: function toggleSubheader(indx) {\n      var current = this.state.headerStates;\n      current[indx] = !this.state.headerStates[indx];\n      this.setState({\n        headerStates: current\n      });\n    }\n  }, {\n    key: \"toggleNavbar\",\n    value: function toggleNavbar() {\n      this.setState({\n        closed: !this.state.closed\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('scroll', this.scrollHandler);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('scroll', this.scrollHandler);\n    }\n  }, {\n    key: \"scrollHandler\",\n    value: function scrollHandler() {\n      if (window.scrollY > document.getElementById('mcm-header').clientHeight) {\n        this.setState({\n          fixedNavbar: true\n        });\n      } else {\n        this.setState({\n          fixedNavbar: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var narrowNavBarStyle = {};\n      var burgerStyle = {\n        transition: 'transform 0.2s ease-in-out'\n      };\n\n      if (this.state.closed) {\n        narrowNavBarStyle.maxHeight = '0px';\n      } else {\n        narrowNavBarStyle.maxHeight = '1000px';\n        burgerStyle.transform = 'rotate(90deg)';\n      }\n\n      var fixedNavbar = {};\n\n      if (this.state.fixedNavbar) {\n        fixedNavbar.position = 'fixed';\n        fixedNavbar.marginTop = \"-\".concat(document.getElementById('mcm-header').clientHeight + 0, \"px\");\n      }\n\n      var wideNavbar = [];\n      var narrowNavbar = [];\n\n      var _loop = function _loop(k) {\n        var item = _this2.props.dropDownItems[k];\n        wideNavbar.push(React.createElement(DropDownWide, {\n          handleMouseEnter: function handleMouseEnter() {\n            return _this2.showSubheader(k);\n          },\n          handleMouseLeave: function handleMouseLeave() {\n            return _this2.hideSubheader(k);\n          },\n          expanded: _this2.state.headerStates[k],\n          header: item.header,\n          headerTo: item.headerTo,\n          dropDownChildren: item.dropDownChildren,\n          key: \"\".concat(item.header)\n        }));\n        narrowNavbar.push(React.createElement(DropDownNarrow, {\n          handleClick: function handleClick() {\n            return _this2.toggleSubheader(k);\n          },\n          expanded: _this2.state.headerStates[k],\n          header: item.header,\n          headerTo: item.headerTo,\n          dropDownChildren: item.dropDownChildren,\n          key: \"\".concat(item.header)\n        }));\n      };\n\n      for (var k = 0; k < this.props.dropDownItems.length; k++) {\n        _loop(k);\n      }\n\n      return React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: \"navbar-crest\"\n      }, React.createElement(McmLogo, null)), React.createElement(\"div\", {\n        className: \"wide-navbar\",\n        style: fixedNavbar\n      }, React.createElement(\"div\", {\n        className: \"filler-box\"\n      }), wideNavbar, React.createElement(\"div\", {\n        className: \"filler-box\"\n      })), React.createElement(\"div\", {\n        className: \"narrow-navbar\"\n      }, React.createElement(\"div\", {\n        className: \"narrow-navbar-toggle\"\n      }, React.createElement(\"img\", {\n        style: burgerStyle,\n        onClick: this.toggleNavbar,\n        src: \"https://icon.now.sh/burger/2B2F3A/24\",\n        alt: \"burger\"\n      })), React.createElement(McmLogo, null), React.createElement(\"div\", {\n        className: \"narrow-navbar-menu\",\n        style: narrowNavBarStyle\n      }, narrowNavbar)));\n    }\n  }]);\n\n  return NavBar;\n}(React.Component);\n\nvar Navbar = function Navbar() {\n  return React.createElement(\"div\", null, React.createElement(NavBar, {\n    dropDownItems: navbar_items\n  }));\n};\n\nexport default Navbar;","map":null,"metadata":{},"sourceType":"module"}