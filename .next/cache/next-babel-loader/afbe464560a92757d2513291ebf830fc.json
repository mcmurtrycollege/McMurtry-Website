{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { Box, Flex, Image } from 'rebass';\nimport Title from '../../general/title';\nimport './associates.css';\nimport associates from './associates_content';\n\nvar AssociateCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssociateCard, _React$Component);\n\n  function AssociateCard(props) {\n    var _this;\n\n    _classCallCheck(this, AssociateCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssociateCard).call(this, props));\n    _this.state = {\n      contentVisible: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AssociateCard, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        contentVisible: !this.state.contentVisible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dropdownStyle = {};\n      var dropdownImageStyle = {};\n      dropdownStyle.maxHeight = this.state.contentVisible ? '650px' : '0';\n      dropdownImageStyle.maxHeight = this.state.contentVisible ? '0' : '300px';\n      return React.createElement(Box, {\n        width: 1,\n        onClick: this.handleClick\n      }, React.createElement(\"div\", {\n        className: this.state.contentVisible ? 'associate-card-visible' : 'associate-card-hidden'\n      }, React.createElement(\"div\", {\n        className: \"associate-image-dropdown\",\n        style: dropdownImageStyle\n      }, React.createElement(Box, {\n        className: \"associate-image\",\n        width: [0.8, 0.5]\n      }, React.createElement(Image, {\n        src: this.props.image,\n        alt: \"\"\n      }))), React.createElement(\"h2\", {\n        className: \"associate-name\"\n      }, this.props.name), React.createElement(\"div\", {\n        style: dropdownStyle,\n        className: \"associate-dropdown\"\n      }, React.createElement(\"p\", null, React.createElement(\"strong\", null, \"Career/Profession: \"), this.props.career), React.createElement(\"p\", null, React.createElement(\"strong\", null, \"Bio: \"), this.props.bio), React.createElement(\"p\", null, React.createElement(\"strong\", null, \"Favorite Movie/TV Show: \"), this.props.movie_tv), React.createElement(\"p\", null, React.createElement(\"strong\", null, \"Hobbies: \"), this.props.hobbies), React.createElement(\"p\", null, React.createElement(\"strong\", null, \"Fun Fact: \"), this.props.fact))));\n    }\n  }]);\n\n  return AssociateCard;\n}(React.Component);\n\nvar Associates = function Associates() {\n  var columns = [[], []];\n\n  for (var i = 0; i < associates.length; i++) {\n    columns[i % 2].push(React.createElement(AssociateCard, {\n      key: \"\".concat(associates[i].name),\n      name: associates[i].name,\n      career: associates[i].career,\n      bio: associates[i].bio,\n      movie_tv: associates[i].movie_tv,\n      hobbies: associates[i].hobbies,\n      fact: associates[i].fact,\n      image: associates[i].image\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"associates-page\"\n  }, React.createElement(Title, {\n    title: 'Associates',\n    width: 240,\n    smallText: false\n  }), React.createElement(Flex, {\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    style: {\n      marginTop: '3%'\n    }\n  }, columns.map(function (column) {\n    return React.createElement(Flex, {\n      flexDirection: \"column\",\n      width: [1, 0.35],\n      key: \"C+\".concat(columns.indexOf(column))\n    }, column);\n  })));\n};\n\nexport default Associates;","map":null,"metadata":{},"sourceType":"module"}