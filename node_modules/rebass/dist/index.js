"use strict";

exports.__esModule = true;
exports.Card = exports.Image = exports.Button = exports.Link = exports.Heading = exports.Text = exports.Flex = exports.Box = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledSystem = require("styled-system");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var themed = function themed(key) {
  return function (props) {
    return props.theme[key];
  };
};

var Box = (0, _styledComponents.default)('div')({
  boxSizing: 'border-box'
}, _styledSystem.space, _styledSystem.width, _styledSystem.fontSize, _styledSystem.color, _styledSystem.flex, _styledSystem.order, _styledSystem.alignSelf, themed('Box'));
exports.Box = Box;
Box.propTypes = _extends({}, _styledSystem.space.propTypes, _styledSystem.width.propTypes, _styledSystem.fontSize.propTypes, _styledSystem.color.propTypes, _styledSystem.flex.propTypes, _styledSystem.order.propTypes, _styledSystem.alignSelf.propTypes);
var Flex = (0, _styledComponents.default)(Box)({
  display: 'flex'
}, _styledSystem.flexWrap, _styledSystem.flexDirection, _styledSystem.alignItems, _styledSystem.justifyContent, themed('Flex'));
exports.Flex = Flex;
Flex.propTypes = _extends({}, _styledSystem.flexWrap.propTypes, _styledSystem.flexDirection.propTypes, _styledSystem.alignItems.propTypes, _styledSystem.justifyContent.propTypes);
var Text = (0, _styledComponents.default)(Box)(_styledSystem.fontFamily, _styledSystem.fontWeight, _styledSystem.textAlign, _styledSystem.lineHeight, _styledSystem.letterSpacing, themed('Text'));
exports.Text = Text;
Text.propTypes = _extends({}, _styledSystem.fontFamily.propTypes, _styledSystem.fontWeight.propTypes, _styledSystem.textAlign.propTypes, _styledSystem.lineHeight.propTypes, _styledSystem.letterSpacing.propTypes);
var Heading = (0, _styledComponents.default)(Text)(themed('Heading'));
exports.Heading = Heading;
Heading.defaultProps = {
  as: 'h2',
  m: 0,
  fontSize: 4,
  fontWeight: 'bold'
};
var Link = (0, _styledComponents.default)(Box)(themed('Link'));
exports.Link = Link;
Link.defaultProps = {
  as: 'a',
  color: 'blue'
};
var Button = (0, _styledComponents.default)(Box)({
  appearance: 'none',
  display: 'inline-block',
  textAlign: 'center',
  lineHeight: 'inherit',
  textDecoration: 'none'
}, _styledSystem.fontWeight, _styledSystem.borders, _styledSystem.borderColor, _styledSystem.borderRadius, _styledSystem.buttonStyle, themed('Button'));
exports.Button = Button;
Button.propTypes = _extends({}, _styledSystem.fontWeight.propTypes, _styledSystem.borders.propTypes, _styledSystem.borderColor.propTypes, _styledSystem.borderRadius.propTypes, _styledSystem.buttonStyle.propTypes);
Button.defaultProps = {
  as: 'button',
  fontSize: 'inherit',
  fontWeight: 'bold',
  m: 0,
  px: 3,
  py: 2,
  color: 'white',
  bg: 'blue',
  border: 0,
  borderRadius: 4
};
var Image = (0, _styledComponents.default)(Box)({
  maxWidth: '100%',
  height: 'auto'
}, _styledSystem.height, _styledSystem.borderRadius, themed('Image'));
exports.Image = Image;
Image.propTypes = _extends({}, _styledSystem.height.propTypes, _styledSystem.borderRadius.propTypes);
Image.defaultProps = {
  as: 'img',
  m: 0
};
var cards = (0, _styledSystem.variant)({
  key: 'cards'
});
var Card = (0, _styledComponents.default)(Box)(_styledSystem.borders, _styledSystem.borderColor, _styledSystem.borderRadius, _styledSystem.boxShadow, _styledSystem.backgroundImage, _styledSystem.backgroundSize, _styledSystem.backgroundPosition, _styledSystem.backgroundRepeat, _styledSystem.opacity, cards, themed('Card'));
exports.Card = Card;
Card.propTypes = _extends({}, _styledSystem.borders.propTypes, _styledSystem.borderColor.propTypes, _styledSystem.borderRadius.propTypes, _styledSystem.boxShadow.propTypes, _styledSystem.backgroundImage.propTypes, _styledSystem.backgroundSize.propTypes, _styledSystem.backgroundPosition.propTypes, _styledSystem.backgroundRepeat.propTypes, _styledSystem.opacity.propTypes, cards.propTypes);